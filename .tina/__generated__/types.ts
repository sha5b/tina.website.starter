//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  title?: Maybe<Scalars['String']>;
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  id: Scalars['ID'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  page: Page;
  pageConnection: PageConnection;
  post: Post;
  postConnection: PostConnection;
  map: Map;
  mapConnection: MapConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
};


export type QueryPostArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryPostConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
};


export type QueryMapArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryMapConnectionArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<MapFilter>;
};

export type DocumentFilter = {
  page?: InputMaybe<PageFilter>;
  post?: InputMaybe<PostFilter>;
  map?: InputMaybe<MapFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<DocumentFilter>;
};

export type DocumentNode = Page | Post | Map;

export type PageBlocksHeroPositionText = {
  __typename?: 'PageBlocksHeroPositionText';
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PageBlocksHeroPositionImage = {
  __typename?: 'PageBlocksHeroPositionImage';
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PageBlocksHeroPosition = {
  __typename?: 'PageBlocksHeroPosition';
  text?: Maybe<PageBlocksHeroPositionText>;
  image?: Maybe<PageBlocksHeroPositionImage>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  title?: Maybe<Scalars['String']>;
  subtitle?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  position?: Maybe<PageBlocksHeroPosition>;
};

export type PageBlocksCtaButton = {
  __typename?: 'PageBlocksCtaButton';
  label?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type PageBlocksCta = {
  __typename?: 'PageBlocksCta';
  title?: Maybe<Scalars['String']>;
  subtitle?: Maybe<Scalars['String']>;
  button?: Maybe<PageBlocksCtaButton>;
};

export type PageBlocksQuote = {
  __typename?: 'PageBlocksQuote';
  quote?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type PageBlocksGalleryGallery = {
  __typename?: 'PageBlocksGalleryGallery';
  image?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PageBlocksGallery = {
  __typename?: 'PageBlocksGallery';
  gallery?: Maybe<Array<Maybe<PageBlocksGalleryGallery>>>;
};

export type PageBlocksFactFact = {
  __typename?: 'PageBlocksFactFact';
  headline?: Maybe<Scalars['String']>;
  subheadline?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type PageBlocksFact = {
  __typename?: 'PageBlocksFact';
  fact?: Maybe<Array<Maybe<PageBlocksFactFact>>>;
};

export type PageBlocksLogosLogos = {
  __typename?: 'PageBlocksLogosLogos';
  logo?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type PageBlocksLogos = {
  __typename?: 'PageBlocksLogos';
  headline?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  logos?: Maybe<Array<Maybe<PageBlocksLogosLogos>>>;
};

export type PageBlocksCardCards = {
  __typename?: 'PageBlocksCardCards';
  title?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  href?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  colors?: Maybe<Scalars['String']>;
};

export type PageBlocksCard = {
  __typename?: 'PageBlocksCard';
  cards?: Maybe<Array<Maybe<PageBlocksCardCards>>>;
};

export type PageBlocksFeatured = {
  __typename?: 'PageBlocksFeatured';
  category?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Float']>;
  colors?: Maybe<Scalars['String']>;
};

export type PageBlocksRichtext = {
  __typename?: 'PageBlocksRichtext';
  body?: Maybe<Scalars['JSON']>;
};

export type PageBlocks = PageBlocksHero | PageBlocksCta | PageBlocksQuote | PageBlocksGallery | PageBlocksFact | PageBlocksLogos | PageBlocksCard | PageBlocksFeatured | PageBlocksRichtext;

export type Page = Node & Document & {
  __typename?: 'Page';
  category?: Maybe<Scalars['String']>;
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  eq?: InputMaybe<Scalars['Float']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type PageBlocksHeroPositionTextFilter = {
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  y?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PageBlocksHeroPositionImageFilter = {
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  y?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PageBlocksHeroPositionFilter = {
  text?: InputMaybe<PageBlocksHeroPositionTextFilter>;
  image?: InputMaybe<PageBlocksHeroPositionImageFilter>;
};

export type PageBlocksHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  position?: InputMaybe<PageBlocksHeroPositionFilter>;
};

export type PageBlocksCtaButtonFilter = {
  label?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type PageBlocksCtaFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  button?: InputMaybe<PageBlocksCtaButtonFilter>;
};

export type PageBlocksQuoteFilter = {
  quote?: InputMaybe<StringFilter>;
  author?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
};

export type PageBlocksGalleryGalleryFilter = {
  image?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PageBlocksGalleryFilter = {
  gallery?: InputMaybe<PageBlocksGalleryGalleryFilter>;
};

export type PageBlocksFactFactFilter = {
  headline?: InputMaybe<StringFilter>;
  subheadline?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
};

export type PageBlocksFactFilter = {
  fact?: InputMaybe<PageBlocksFactFactFilter>;
};

export type PageBlocksLogosLogosFilter = {
  logo?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type PageBlocksLogosFilter = {
  headline?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  logos?: InputMaybe<PageBlocksLogosLogosFilter>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
};

export type PageBlocksCardCardsFilter = {
  title?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  href?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  colors?: InputMaybe<StringFilter>;
};

export type PageBlocksCardFilter = {
  cards?: InputMaybe<PageBlocksCardCardsFilter>;
};

export type PageBlocksFeaturedFilter = {
  category?: InputMaybe<StringFilter>;
  size?: InputMaybe<NumberFilter>;
  colors?: InputMaybe<StringFilter>;
};

export type PageBlocksRichtextFilter = {
  body?: InputMaybe<RichTextFilter>;
};

export type PageBlocksFilter = {
  hero?: InputMaybe<PageBlocksHeroFilter>;
  cta?: InputMaybe<PageBlocksCtaFilter>;
  quote?: InputMaybe<PageBlocksQuoteFilter>;
  gallery?: InputMaybe<PageBlocksGalleryFilter>;
  fact?: InputMaybe<PageBlocksFactFilter>;
  logos?: InputMaybe<PageBlocksLogosFilter>;
  card?: InputMaybe<PageBlocksCardFilter>;
  featured?: InputMaybe<PageBlocksFeaturedFilter>;
  richtext?: InputMaybe<PageBlocksRichtextFilter>;
};

export type PageFilter = {
  category?: InputMaybe<StringFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type PostTextRichtext = {
  __typename?: 'PostTextRichtext';
  body?: Maybe<Scalars['JSON']>;
};

export type PostText = PostTextRichtext;

export type PostBlocksHeroPositionText = {
  __typename?: 'PostBlocksHeroPositionText';
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PostBlocksHeroPositionImage = {
  __typename?: 'PostBlocksHeroPositionImage';
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PostBlocksHeroPosition = {
  __typename?: 'PostBlocksHeroPosition';
  text?: Maybe<PostBlocksHeroPositionText>;
  image?: Maybe<PostBlocksHeroPositionImage>;
};

export type PostBlocksHero = {
  __typename?: 'PostBlocksHero';
  title?: Maybe<Scalars['String']>;
  subtitle?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  position?: Maybe<PostBlocksHeroPosition>;
};

export type PostBlocksCtaButton = {
  __typename?: 'PostBlocksCtaButton';
  label?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type PostBlocksCta = {
  __typename?: 'PostBlocksCta';
  title?: Maybe<Scalars['String']>;
  subtitle?: Maybe<Scalars['String']>;
  button?: Maybe<PostBlocksCtaButton>;
};

export type PostBlocksQuote = {
  __typename?: 'PostBlocksQuote';
  quote?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type PostBlocksGalleryGallery = {
  __typename?: 'PostBlocksGalleryGallery';
  image?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
};

export type PostBlocksGallery = {
  __typename?: 'PostBlocksGallery';
  gallery?: Maybe<Array<Maybe<PostBlocksGalleryGallery>>>;
};

export type PostBlocksFactFact = {
  __typename?: 'PostBlocksFactFact';
  headline?: Maybe<Scalars['String']>;
  subheadline?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type PostBlocksFact = {
  __typename?: 'PostBlocksFact';
  fact?: Maybe<Array<Maybe<PostBlocksFactFact>>>;
};

export type PostBlocksLogosLogos = {
  __typename?: 'PostBlocksLogosLogos';
  logo?: Maybe<Scalars['String']>;
  alt?: Maybe<Scalars['String']>;
  href?: Maybe<Scalars['String']>;
};

export type PostBlocksLogos = {
  __typename?: 'PostBlocksLogos';
  headline?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
  logos?: Maybe<Array<Maybe<PostBlocksLogosLogos>>>;
};

export type PostBlocksCardCards = {
  __typename?: 'PostBlocksCardCards';
  title?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['JSON']>;
  href?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
  colors?: Maybe<Scalars['String']>;
};

export type PostBlocksCard = {
  __typename?: 'PostBlocksCard';
  cards?: Maybe<Array<Maybe<PostBlocksCardCards>>>;
};

export type PostBlocksFeatured = {
  __typename?: 'PostBlocksFeatured';
  category?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Float']>;
  colors?: Maybe<Scalars['String']>;
};

export type PostBlocksRichtext = {
  __typename?: 'PostBlocksRichtext';
  body?: Maybe<Scalars['JSON']>;
};

export type PostBlocks = PostBlocksHero | PostBlocksCta | PostBlocksQuote | PostBlocksGallery | PostBlocksFact | PostBlocksLogos | PostBlocksCard | PostBlocksFeatured | PostBlocksRichtext;

export type Post = Node & Document & {
  __typename?: 'Post';
  title?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  tags?: Maybe<Array<Maybe<Scalars['String']>>>;
  date?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Float']>;
  image?: Maybe<Scalars['String']>;
  text?: Maybe<Array<Maybe<PostText>>>;
  blocks?: Maybe<Array<Maybe<PostBlocks>>>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type DatetimeFilter = {
  after?: InputMaybe<Scalars['String']>;
  before?: InputMaybe<Scalars['String']>;
  eq?: InputMaybe<Scalars['String']>;
  exists?: InputMaybe<Scalars['Boolean']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type PostTextRichtextFilter = {
  body?: InputMaybe<RichTextFilter>;
};

export type PostTextFilter = {
  richtext?: InputMaybe<PostTextRichtextFilter>;
};

export type PostBlocksHeroPositionTextFilter = {
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  y?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PostBlocksHeroPositionImageFilter = {
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  y?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PostBlocksHeroPositionFilter = {
  text?: InputMaybe<PostBlocksHeroPositionTextFilter>;
  image?: InputMaybe<PostBlocksHeroPositionImageFilter>;
};

export type PostBlocksHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  position?: InputMaybe<PostBlocksHeroPositionFilter>;
};

export type PostBlocksCtaButtonFilter = {
  label?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type PostBlocksCtaFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  button?: InputMaybe<PostBlocksCtaButtonFilter>;
};

export type PostBlocksQuoteFilter = {
  quote?: InputMaybe<StringFilter>;
  author?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
};

export type PostBlocksGalleryGalleryFilter = {
  image?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
};

export type PostBlocksGalleryFilter = {
  gallery?: InputMaybe<PostBlocksGalleryGalleryFilter>;
};

export type PostBlocksFactFactFilter = {
  headline?: InputMaybe<StringFilter>;
  subheadline?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
};

export type PostBlocksFactFilter = {
  fact?: InputMaybe<PostBlocksFactFactFilter>;
};

export type PostBlocksLogosLogosFilter = {
  logo?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  href?: InputMaybe<StringFilter>;
};

export type PostBlocksLogosFilter = {
  headline?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  logos?: InputMaybe<PostBlocksLogosLogosFilter>;
};

export type PostBlocksCardCardsFilter = {
  title?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
  href?: InputMaybe<StringFilter>;
  x?: InputMaybe<NumberFilter>;
  width?: InputMaybe<NumberFilter>;
  colors?: InputMaybe<StringFilter>;
};

export type PostBlocksCardFilter = {
  cards?: InputMaybe<PostBlocksCardCardsFilter>;
};

export type PostBlocksFeaturedFilter = {
  category?: InputMaybe<StringFilter>;
  size?: InputMaybe<NumberFilter>;
  colors?: InputMaybe<StringFilter>;
};

export type PostBlocksRichtextFilter = {
  body?: InputMaybe<RichTextFilter>;
};

export type PostBlocksFilter = {
  hero?: InputMaybe<PostBlocksHeroFilter>;
  cta?: InputMaybe<PostBlocksCtaFilter>;
  quote?: InputMaybe<PostBlocksQuoteFilter>;
  gallery?: InputMaybe<PostBlocksGalleryFilter>;
  fact?: InputMaybe<PostBlocksFactFilter>;
  logos?: InputMaybe<PostBlocksLogosFilter>;
  card?: InputMaybe<PostBlocksCardFilter>;
  featured?: InputMaybe<PostBlocksFeaturedFilter>;
  richtext?: InputMaybe<PostBlocksRichtextFilter>;
};

export type PostFilter = {
  title?: InputMaybe<StringFilter>;
  category?: InputMaybe<StringFilter>;
  tags?: InputMaybe<StringFilter>;
  date?: InputMaybe<DatetimeFilter>;
  description?: InputMaybe<StringFilter>;
  size?: InputMaybe<NumberFilter>;
  image?: InputMaybe<ImageFilter>;
  text?: InputMaybe<PostTextFilter>;
  blocks?: InputMaybe<PostBlocksFilter>;
};

export type PostConnectionEdges = {
  __typename?: 'PostConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Post>;
};

export type PostConnection = Connection & {
  __typename?: 'PostConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<PostConnectionEdges>>>;
};

export type Map = Node & Document & {
  __typename?: 'Map';
  date?: Maybe<Scalars['String']>;
  long?: Maybe<Scalars['Float']>;
  lat?: Maybe<Scalars['Float']>;
  bearing?: Maybe<Scalars['Float']>;
  pitch?: Maybe<Scalars['Float']>;
  id: Scalars['ID'];
  _sys: SystemInfo;
  _values: Scalars['JSON'];
};

export type MapFilter = {
  date?: InputMaybe<DatetimeFilter>;
  long?: InputMaybe<NumberFilter>;
  lat?: InputMaybe<NumberFilter>;
  bearing?: InputMaybe<NumberFilter>;
  pitch?: InputMaybe<NumberFilter>;
};

export type MapConnectionEdges = {
  __typename?: 'MapConnectionEdges';
  cursor: Scalars['String'];
  node?: Maybe<Map>;
};

export type MapConnection = Connection & {
  __typename?: 'MapConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<MapConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePage: Page;
  createPage: Page;
  updatePost: Post;
  createPost: Post;
  updateMap: Map;
  createMap: Map;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String'];
  params: PageMutation;
};


export type MutationUpdatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationCreatePostArgs = {
  relativePath: Scalars['String'];
  params: PostMutation;
};


export type MutationUpdateMapArgs = {
  relativePath: Scalars['String'];
  params: MapMutation;
};


export type MutationCreateMapArgs = {
  relativePath: Scalars['String'];
  params: MapMutation;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
  post?: InputMaybe<PostMutation>;
  map?: InputMaybe<MapMutation>;
};

export type PageBlocksHeroPositionTextMutation = {
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  y?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksHeroPositionImageMutation = {
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  y?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksHeroPositionMutation = {
  text?: InputMaybe<PageBlocksHeroPositionTextMutation>;
  image?: InputMaybe<PageBlocksHeroPositionImageMutation>;
};

export type PageBlocksHeroMutation = {
  title?: InputMaybe<Scalars['String']>;
  subtitle?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<PageBlocksHeroPositionMutation>;
};

export type PageBlocksCtaButtonMutation = {
  label?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCtaMutation = {
  title?: InputMaybe<Scalars['String']>;
  subtitle?: InputMaybe<Scalars['String']>;
  button?: InputMaybe<PageBlocksCtaButtonMutation>;
};

export type PageBlocksQuoteMutation = {
  quote?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksGalleryGalleryMutation = {
  image?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksGalleryMutation = {
  gallery?: InputMaybe<Array<InputMaybe<PageBlocksGalleryGalleryMutation>>>;
};

export type PageBlocksFactFactMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subheadline?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type PageBlocksFactMutation = {
  fact?: InputMaybe<Array<InputMaybe<PageBlocksFactFactMutation>>>;
};

export type PageBlocksLogosLogosMutation = {
  logo?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type PageBlocksLogosMutation = {
  headline?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  logos?: InputMaybe<Array<InputMaybe<PageBlocksLogosLogosMutation>>>;
};

export type PageBlocksCardCardsMutation = {
  title?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  href?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  colors?: InputMaybe<Scalars['String']>;
};

export type PageBlocksCardMutation = {
  cards?: InputMaybe<Array<InputMaybe<PageBlocksCardCardsMutation>>>;
};

export type PageBlocksFeaturedMutation = {
  category?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
  colors?: InputMaybe<Scalars['String']>;
};

export type PageBlocksRichtextMutation = {
  body?: InputMaybe<Scalars['JSON']>;
};

export type PageBlocksMutation = {
  hero?: InputMaybe<PageBlocksHeroMutation>;
  cta?: InputMaybe<PageBlocksCtaMutation>;
  quote?: InputMaybe<PageBlocksQuoteMutation>;
  gallery?: InputMaybe<PageBlocksGalleryMutation>;
  fact?: InputMaybe<PageBlocksFactMutation>;
  logos?: InputMaybe<PageBlocksLogosMutation>;
  card?: InputMaybe<PageBlocksCardMutation>;
  featured?: InputMaybe<PageBlocksFeaturedMutation>;
  richtext?: InputMaybe<PageBlocksRichtextMutation>;
};

export type PageMutation = {
  category?: InputMaybe<Scalars['String']>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type PostTextRichtextMutation = {
  body?: InputMaybe<Scalars['JSON']>;
};

export type PostTextMutation = {
  richtext?: InputMaybe<PostTextRichtextMutation>;
};

export type PostBlocksHeroPositionTextMutation = {
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  y?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PostBlocksHeroPositionImageMutation = {
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  y?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PostBlocksHeroPositionMutation = {
  text?: InputMaybe<PostBlocksHeroPositionTextMutation>;
  image?: InputMaybe<PostBlocksHeroPositionImageMutation>;
};

export type PostBlocksHeroMutation = {
  title?: InputMaybe<Scalars['String']>;
  subtitle?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<PostBlocksHeroPositionMutation>;
};

export type PostBlocksCtaButtonMutation = {
  label?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type PostBlocksCtaMutation = {
  title?: InputMaybe<Scalars['String']>;
  subtitle?: InputMaybe<Scalars['String']>;
  button?: InputMaybe<PostBlocksCtaButtonMutation>;
};

export type PostBlocksQuoteMutation = {
  quote?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type PostBlocksGalleryGalleryMutation = {
  image?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  height?: InputMaybe<Scalars['Float']>;
};

export type PostBlocksGalleryMutation = {
  gallery?: InputMaybe<Array<InputMaybe<PostBlocksGalleryGalleryMutation>>>;
};

export type PostBlocksFactFactMutation = {
  headline?: InputMaybe<Scalars['String']>;
  subheadline?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type PostBlocksFactMutation = {
  fact?: InputMaybe<Array<InputMaybe<PostBlocksFactFactMutation>>>;
};

export type PostBlocksLogosLogosMutation = {
  logo?: InputMaybe<Scalars['String']>;
  alt?: InputMaybe<Scalars['String']>;
  href?: InputMaybe<Scalars['String']>;
};

export type PostBlocksLogosMutation = {
  headline?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
  logos?: InputMaybe<Array<InputMaybe<PostBlocksLogosLogosMutation>>>;
};

export type PostBlocksCardCardsMutation = {
  title?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['JSON']>;
  href?: InputMaybe<Scalars['String']>;
  x?: InputMaybe<Scalars['Float']>;
  width?: InputMaybe<Scalars['Float']>;
  colors?: InputMaybe<Scalars['String']>;
};

export type PostBlocksCardMutation = {
  cards?: InputMaybe<Array<InputMaybe<PostBlocksCardCardsMutation>>>;
};

export type PostBlocksFeaturedMutation = {
  category?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
  colors?: InputMaybe<Scalars['String']>;
};

export type PostBlocksRichtextMutation = {
  body?: InputMaybe<Scalars['JSON']>;
};

export type PostBlocksMutation = {
  hero?: InputMaybe<PostBlocksHeroMutation>;
  cta?: InputMaybe<PostBlocksCtaMutation>;
  quote?: InputMaybe<PostBlocksQuoteMutation>;
  gallery?: InputMaybe<PostBlocksGalleryMutation>;
  fact?: InputMaybe<PostBlocksFactMutation>;
  logos?: InputMaybe<PostBlocksLogosMutation>;
  card?: InputMaybe<PostBlocksCardMutation>;
  featured?: InputMaybe<PostBlocksFeaturedMutation>;
  richtext?: InputMaybe<PostBlocksRichtextMutation>;
};

export type PostMutation = {
  title?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  date?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['Float']>;
  image?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Array<InputMaybe<PostTextMutation>>>;
  blocks?: InputMaybe<Array<InputMaybe<PostBlocksMutation>>>;
};

export type MapMutation = {
  date?: InputMaybe<Scalars['String']>;
  long?: InputMaybe<Scalars['Float']>;
  lat?: InputMaybe<Scalars['Float']>;
  bearing?: InputMaybe<Scalars['Float']>;
  pitch?: InputMaybe<Scalars['Float']>;
};

export type PagePartsFragment = { __typename?: 'Page', category?: string | null, blocks?: Array<{ __typename: 'PageBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PageBlocksHeroPosition', text?: { __typename: 'PageBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PageBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PageBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PageBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PageBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PageBlocksGallery', gallery?: Array<{ __typename: 'PageBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PageBlocksFact', fact?: Array<{ __typename: 'PageBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PageBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PageBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PageBlocksCard', cards?: Array<{ __typename: 'PageBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PageBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PageBlocksRichtext', body?: any | null } | null> | null };

export type PostPartsFragment = { __typename?: 'Post', title?: string | null, category?: string | null, tags?: Array<string | null> | null, date?: string | null, description?: string | null, size?: number | null, image?: string | null, text?: Array<{ __typename: 'PostTextRichtext', body?: any | null } | null> | null, blocks?: Array<{ __typename: 'PostBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PostBlocksHeroPosition', text?: { __typename: 'PostBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PostBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PostBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PostBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PostBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PostBlocksGallery', gallery?: Array<{ __typename: 'PostBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PostBlocksFact', fact?: Array<{ __typename: 'PostBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PostBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PostBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PostBlocksCard', cards?: Array<{ __typename: 'PostBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PostBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PostBlocksRichtext', body?: any | null } | null> | null };

export type MapPartsFragment = { __typename?: 'Map', date?: string | null, long?: number | null, lat?: number | null, bearing?: number | null, pitch?: number | null };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'Page', id: string, category?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PageBlocksHeroPosition', text?: { __typename: 'PageBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PageBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PageBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PageBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PageBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PageBlocksGallery', gallery?: Array<{ __typename: 'PageBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PageBlocksFact', fact?: Array<{ __typename: 'PageBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PageBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PageBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PageBlocksCard', cards?: Array<{ __typename: 'PageBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PageBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PageBlocksRichtext', body?: any | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', node?: { __typename?: 'Page', id: string, category?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PageBlocksHeroPosition', text?: { __typename: 'PageBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PageBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PageBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PageBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PageBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PageBlocksGallery', gallery?: Array<{ __typename: 'PageBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PageBlocksFact', fact?: Array<{ __typename: 'PageBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PageBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PageBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PageBlocksCard', cards?: Array<{ __typename: 'PageBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PageBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PageBlocksRichtext', body?: any | null } | null> | null } | null } | null> | null } };

export type PostQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', post: { __typename?: 'Post', id: string, title?: string | null, category?: string | null, tags?: Array<string | null> | null, date?: string | null, description?: string | null, size?: number | null, image?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, text?: Array<{ __typename: 'PostTextRichtext', body?: any | null } | null> | null, blocks?: Array<{ __typename: 'PostBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PostBlocksHeroPosition', text?: { __typename: 'PostBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PostBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PostBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PostBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PostBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PostBlocksGallery', gallery?: Array<{ __typename: 'PostBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PostBlocksFact', fact?: Array<{ __typename: 'PostBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PostBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PostBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PostBlocksCard', cards?: Array<{ __typename: 'PostBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PostBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PostBlocksRichtext', body?: any | null } | null> | null } };

export type PostConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<PostFilter>;
}>;


export type PostConnectionQuery = { __typename?: 'Query', postConnection: { __typename?: 'PostConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PostConnectionEdges', node?: { __typename?: 'Post', id: string, title?: string | null, category?: string | null, tags?: Array<string | null> | null, date?: string | null, description?: string | null, size?: number | null, image?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, text?: Array<{ __typename: 'PostTextRichtext', body?: any | null } | null> | null, blocks?: Array<{ __typename: 'PostBlocksHero', title?: string | null, subtitle?: string | null, image?: string | null, position?: { __typename: 'PostBlocksHeroPosition', text?: { __typename: 'PostBlocksHeroPositionText', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null, image?: { __typename: 'PostBlocksHeroPositionImage', x?: number | null, width?: number | null, y?: number | null, height?: number | null } | null } | null } | { __typename: 'PostBlocksCta', title?: string | null, subtitle?: string | null, button?: { __typename: 'PostBlocksCtaButton', label?: string | null, href?: string | null } | null } | { __typename: 'PostBlocksQuote', quote?: string | null, author?: string | null, x?: number | null, width?: number | null } | { __typename: 'PostBlocksGallery', gallery?: Array<{ __typename: 'PostBlocksGalleryGallery', image?: string | null, alt?: string | null, x?: number | null, width?: number | null, height?: number | null } | null> | null } | { __typename: 'PostBlocksFact', fact?: Array<{ __typename: 'PostBlocksFactFact', headline?: string | null, subheadline?: string | null, x?: number | null, width?: number | null } | null> | null } | { __typename: 'PostBlocksLogos', headline?: string | null, width?: number | null, logos?: Array<{ __typename: 'PostBlocksLogosLogos', logo?: string | null, alt?: string | null, href?: string | null } | null> | null } | { __typename: 'PostBlocksCard', cards?: Array<{ __typename: 'PostBlocksCardCards', title?: string | null, body?: any | null, href?: string | null, x?: number | null, width?: number | null, colors?: string | null } | null> | null } | { __typename: 'PostBlocksFeatured', category?: string | null, size?: number | null, colors?: string | null } | { __typename: 'PostBlocksRichtext', body?: any | null } | null> | null } | null } | null> | null } };

export type MapQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type MapQuery = { __typename?: 'Query', map: { __typename?: 'Map', id: string, date?: string | null, long?: number | null, lat?: number | null, bearing?: number | null, pitch?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type MapConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
  sort?: InputMaybe<Scalars['String']>;
  filter?: InputMaybe<MapFilter>;
}>;


export type MapConnectionQuery = { __typename?: 'Query', mapConnection: { __typename?: 'MapConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'MapConnectionEdges', node?: { __typename?: 'Map', id: string, date?: string | null, long?: number | null, lat?: number | null, bearing?: number | null, pitch?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  category
  blocks {
    __typename
    ... on PageBlocksHero {
      title
      subtitle
      image
      position {
        __typename
        text {
          __typename
          x
          width
          y
          height
        }
        image {
          __typename
          x
          width
          y
          height
        }
      }
    }
    ... on PageBlocksCta {
      title
      subtitle
      button {
        __typename
        label
        href
      }
    }
    ... on PageBlocksQuote {
      quote
      author
      x
      width
    }
    ... on PageBlocksGallery {
      gallery {
        __typename
        image
        alt
        x
        width
        height
      }
    }
    ... on PageBlocksFact {
      fact {
        __typename
        headline
        subheadline
        x
        width
      }
    }
    ... on PageBlocksLogos {
      headline
      width
      logos {
        __typename
        logo
        alt
        href
      }
    }
    ... on PageBlocksCard {
      cards {
        __typename
        title
        body
        href
        x
        width
        colors
      }
    }
    ... on PageBlocksFeatured {
      category
      size
      colors
    }
    ... on PageBlocksRichtext {
      body
    }
  }
}
    `;
export const PostPartsFragmentDoc = gql`
    fragment PostParts on Post {
  title
  category
  tags
  date
  description
  size
  image
  text {
    __typename
    ... on PostTextRichtext {
      body
    }
  }
  blocks {
    __typename
    ... on PostBlocksHero {
      title
      subtitle
      image
      position {
        __typename
        text {
          __typename
          x
          width
          y
          height
        }
        image {
          __typename
          x
          width
          y
          height
        }
      }
    }
    ... on PostBlocksCta {
      title
      subtitle
      button {
        __typename
        label
        href
      }
    }
    ... on PostBlocksQuote {
      quote
      author
      x
      width
    }
    ... on PostBlocksGallery {
      gallery {
        __typename
        image
        alt
        x
        width
        height
      }
    }
    ... on PostBlocksFact {
      fact {
        __typename
        headline
        subheadline
        x
        width
      }
    }
    ... on PostBlocksLogos {
      headline
      width
      logos {
        __typename
        logo
        alt
        href
      }
    }
    ... on PostBlocksCard {
      cards {
        __typename
        title
        body
        href
        x
        width
        colors
      }
    }
    ... on PostBlocksFeatured {
      category
      size
      colors
    }
    ... on PostBlocksRichtext {
      body
    }
  }
}
    `;
export const MapPartsFragmentDoc = gql`
    fragment MapParts on Map {
  date
  long
  lat
  bearing
  pitch
}
    `;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const PostDocument = gql`
    query post($relativePath: String!) {
  post(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PostParts
  }
}
    ${PostPartsFragmentDoc}`;
export const PostConnectionDocument = gql`
    query postConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PostFilter) {
  postConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PostParts
      }
    }
  }
}
    ${PostPartsFragmentDoc}`;
export const MapDocument = gql`
    query map($relativePath: String!) {
  map(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...MapParts
  }
}
    ${MapPartsFragmentDoc}`;
export const MapConnectionDocument = gql`
    query mapConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: MapFilter) {
  mapConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...MapParts
      }
    }
  }
}
    ${MapPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      },
    post(variables: PostQueryVariables, options?: C): Promise<{data: PostQuery, variables: PostQueryVariables, query: string}> {
        return requester<{data: PostQuery, variables: PostQueryVariables, query: string}, PostQueryVariables>(PostDocument, variables, options);
      },
    postConnection(variables?: PostConnectionQueryVariables, options?: C): Promise<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}> {
        return requester<{data: PostConnectionQuery, variables: PostConnectionQueryVariables, query: string}, PostConnectionQueryVariables>(PostConnectionDocument, variables, options);
      },
    map(variables: MapQueryVariables, options?: C): Promise<{data: MapQuery, variables: MapQueryVariables, query: string}> {
        return requester<{data: MapQuery, variables: MapQueryVariables, query: string}, MapQueryVariables>(MapDocument, variables, options);
      },
    mapConnection(variables?: MapConnectionQueryVariables, options?: C): Promise<{data: MapConnectionQuery, variables: MapConnectionQueryVariables, query: string}> {
        return requester<{data: MapConnectionQuery, variables: MapConnectionQueryVariables, query: string}, MapConnectionQueryVariables>(MapConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (client: TinaClient) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: any,
    client
  ) => Promise<any> = async (doc, vars, _options) => {
    const data = await client.request({
      query: doc,
      variables: vars,
    });

    return { data: data?.data, query: doc, variables: vars || {} };
  };

  return requester;
};

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(createClient({ url: "http://localhost:4001/graphql", queries }))
  );

export const queries = (client: TinaClient) => {
  const requester = generateRequester(client);
  return getSdk(requester);
};

  